/*
 * Infobip Client API Libraries OpenAPI Specification
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.infobip.model;

import com.google.gson.annotations.SerializedName;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** Template data. Values have to be set as registered in the template. */
public class WhatsAppTemplateDataContent {
  public static final String SERIALIZED_NAME_BODY = "body";

  @SerializedName(SERIALIZED_NAME_BODY)
  private WhatsAppTemplateBodyContent body;

  public static final String SERIALIZED_NAME_HEADER = "header";

  @SerializedName(SERIALIZED_NAME_HEADER)
  private WhatsAppTemplateHeaderContent header;

  public static final String SERIALIZED_NAME_BUTTONS = "buttons";

  @SerializedName(SERIALIZED_NAME_BUTTONS)
  private List<WhatsAppTemplateButtonContent> buttons = null;

  public WhatsAppTemplateDataContent body(WhatsAppTemplateBodyContent body) {

    this.body = body;
    return this;
  }

  /**
   * Get body
   *
   * @return body
   */
  public WhatsAppTemplateBodyContent getBody() {
    return body;
  }

  public void setBody(WhatsAppTemplateBodyContent body) {
    this.body = body;
  }

  public WhatsAppTemplateDataContent header(WhatsAppTemplateHeaderContent header) {

    this.header = header;
    return this;
  }

  /**
   * Get header
   *
   * @return header
   */
  public WhatsAppTemplateHeaderContent getHeader() {
    return header;
  }

  public void setHeader(WhatsAppTemplateHeaderContent header) {
    this.header = header;
  }

  public WhatsAppTemplateDataContent buttons(List<WhatsAppTemplateButtonContent> buttons) {

    this.buttons = buttons;
    return this;
  }

  public WhatsAppTemplateDataContent addButtonsItem(WhatsAppTemplateButtonContent buttonsItem) {
    if (this.buttons == null) {
      this.buttons = new ArrayList<>();
    }
    this.buttons.add(buttonsItem);
    return this;
  }

  /**
   * Template buttons. Should be defined in correct order, only if &#x60;quick reply&#x60; or
   * &#x60;dynamic URL&#x60; buttons have been registered. It can have up to three &#x60;quick
   * reply&#x60; buttons or only one &#x60;dynamic URL&#x60; button.
   *
   * @return buttons
   */
  public List<WhatsAppTemplateButtonContent> getButtons() {
    return buttons;
  }

  public void setButtons(List<WhatsAppTemplateButtonContent> buttons) {
    this.buttons = buttons;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WhatsAppTemplateDataContent whatsAppTemplateDataContent = (WhatsAppTemplateDataContent) o;
    return Objects.equals(this.body, whatsAppTemplateDataContent.body)
        && Objects.equals(this.header, whatsAppTemplateDataContent.header)
        && Objects.equals(this.buttons, whatsAppTemplateDataContent.buttons);
  }

  @Override
  public int hashCode() {
    return Objects.hash(body, header, buttons);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WhatsAppTemplateDataContent {\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    header: ").append(toIndentedString(header)).append("\n");
    sb.append("    buttons: ").append(toIndentedString(buttons)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
