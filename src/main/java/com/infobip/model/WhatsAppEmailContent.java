/*
 * Infobip Client API Libraries OpenAPI Specification
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.infobip.model;

import com.google.gson.annotations.SerializedName;
import java.util.Objects;

/** Array of emails information. */
public class WhatsAppEmailContent {
  public static final String SERIALIZED_NAME_EMAIL = "email";

  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_TYPE = "type";

  @SerializedName(SERIALIZED_NAME_TYPE)
  private WhatsAppEmailType type;

  public WhatsAppEmailContent email(String email) {

    this.email = email;
    return this;
  }

  /**
   * Contact&#39;s email.
   *
   * @return email
   */
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public WhatsAppEmailContent type(WhatsAppEmailType type) {

    this.type = type;
    return this;
  }

  /**
   * Get type
   *
   * @return type
   */
  public WhatsAppEmailType getType() {
    return type;
  }

  public void setType(WhatsAppEmailType type) {
    this.type = type;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WhatsAppEmailContent whatsAppEmailContent = (WhatsAppEmailContent) o;
    return Objects.equals(this.email, whatsAppEmailContent.email)
        && Objects.equals(this.type, whatsAppEmailContent.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(email, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WhatsAppEmailContent {\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
