/*
 * Infobip Client API Libraries OpenAPI Specification
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.infobip.model;

import com.google.gson.annotations.SerializedName;
import java.util.Objects;

/** TfaStartAuthenticationResponse */
public class TfaStartAuthenticationResponse {
  public static final String SERIALIZED_NAME_CALL_STATUS = "callStatus";

  @SerializedName(SERIALIZED_NAME_CALL_STATUS)
  private String callStatus;

  public static final String SERIALIZED_NAME_NC_STATUS = "ncStatus";

  @SerializedName(SERIALIZED_NAME_NC_STATUS)
  private String ncStatus;

  public static final String SERIALIZED_NAME_PIN_ID = "pinId";

  @SerializedName(SERIALIZED_NAME_PIN_ID)
  private String pinId;

  public static final String SERIALIZED_NAME_SMS_STATUS = "smsStatus";

  @SerializedName(SERIALIZED_NAME_SMS_STATUS)
  private String smsStatus;

  public static final String SERIALIZED_NAME_TO = "to";

  @SerializedName(SERIALIZED_NAME_TO)
  private String to;

  public TfaStartAuthenticationResponse callStatus(String callStatus) {

    this.callStatus = callStatus;
    return this;
  }

  /**
   * Call status.
   *
   * @return callStatus
   */
  public String getCallStatus() {
    return callStatus;
  }

  public void setCallStatus(String callStatus) {
    this.callStatus = callStatus;
  }

  public TfaStartAuthenticationResponse ncStatus(String ncStatus) {

    this.ncStatus = ncStatus;
    return this;
  }

  /**
   * Status of sent Number Lookup. Number Lookup status can have one of the following values:
   * &#x60;NC_DESTINATION_UNKNOWN&#x60;, &#x60;NC_DESTINATION_REACHABLE&#x60;,
   * &#x60;NC_DESTINATION_NOT_REACHABLE&#x60;, &#x60;NC_NOT_CONFIGURED&#x60;. If you get the
   * &#x60;NC_NOT_CONFIGURED&#x60; status, you should contact your Account Manager. SMS will not be
   * sent only if Number Lookup status is &#x60;NC_NOT_REACHABLE&#x60;.
   *
   * @return ncStatus
   */
  public String getNcStatus() {
    return ncStatus;
  }

  public void setNcStatus(String ncStatus) {
    this.ncStatus = ncStatus;
  }

  public TfaStartAuthenticationResponse pinId(String pinId) {

    this.pinId = pinId;
    return this;
  }

  /**
   * Sent PIN code ID.
   *
   * @return pinId
   */
  public String getPinId() {
    return pinId;
  }

  public void setPinId(String pinId) {
    this.pinId = pinId;
  }

  public TfaStartAuthenticationResponse smsStatus(String smsStatus) {

    this.smsStatus = smsStatus;
    return this;
  }

  /**
   * Sent SMS status. Can have one of the following values: &#x60;MESSAGE_SENT&#x60;,
   * &#x60;MESSAGE_NOT_SENT&#x60;.
   *
   * @return smsStatus
   */
  public String getSmsStatus() {
    return smsStatus;
  }

  public void setSmsStatus(String smsStatus) {
    this.smsStatus = smsStatus;
  }

  public TfaStartAuthenticationResponse to(String to) {

    this.to = to;
    return this;
  }

  /**
   * Phone number to which the 2FA message will be sent. Example: &#x60;41793026727&#x60;.
   *
   * @return to
   */
  public String getTo() {
    return to;
  }

  public void setTo(String to) {
    this.to = to;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TfaStartAuthenticationResponse tfaStartAuthenticationResponse =
        (TfaStartAuthenticationResponse) o;
    return Objects.equals(this.callStatus, tfaStartAuthenticationResponse.callStatus)
        && Objects.equals(this.ncStatus, tfaStartAuthenticationResponse.ncStatus)
        && Objects.equals(this.pinId, tfaStartAuthenticationResponse.pinId)
        && Objects.equals(this.smsStatus, tfaStartAuthenticationResponse.smsStatus)
        && Objects.equals(this.to, tfaStartAuthenticationResponse.to);
  }

  @Override
  public int hashCode() {
    return Objects.hash(callStatus, ncStatus, pinId, smsStatus, to);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TfaStartAuthenticationResponse {\n");
    sb.append("    callStatus: ").append(toIndentedString(callStatus)).append("\n");
    sb.append("    ncStatus: ").append(toIndentedString(ncStatus)).append("\n");
    sb.append("    pinId: ").append(toIndentedString(pinId)).append("\n");
    sb.append("    smsStatus: ").append(toIndentedString(smsStatus)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
